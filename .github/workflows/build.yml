name: Build domains
on:
  workflow_dispatch:
  schedule:
    - cron: "0 18 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "update_version=$(date -d '+8 hours' +%Y-%m-%d)" >> ${GITHUB_ENV}
          echo "LocalAreaNetwork=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list" >> $GITHUB_ENV
          echo "private_direct=https://raw.githubusercontent.com/wuyuqq/247cp/master/sing-box/ruleset/private_cn.list" >> $GITHUB_ENV
          echo "private_proxy=https://raw.githubusercontent.com/wuyuqq/247cp/master/sing-box/ruleset/private_!cn.list" >> $GITHUB_ENV
          echo "Emby=https://raw.githubusercontent.com/wuyuqq/247cp/master/sing-box/ruleset/emby.list" >> $GITHUB_ENV
          echo "GoogleCN=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list" >> $GITHUB_ENV
          echo "GoogleFCM=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/GoogleFCM.list" >> $GITHUB_ENV
          echo "Bing=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Bing.list" >> $GITHUB_ENV
          echo "OneDrive=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/OneDrive.list" >> $GITHUB_ENV
          echo "Microsoft=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Microsoft.list" >> $GITHUB_ENV
          echo "Apple=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Apple.list" >> $GITHUB_ENV
          echo "Telegram=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Telegram.list" >> $GITHUB_ENV
          echo "OpenAi=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/OpenAi.list" >> $GITHUB_ENV
          echo "YouTube=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/YouTube.list" >> $GITHUB_ENV
          echo "ProxyMedia=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyMedia.list" >> $GITHUB_ENV
          echo "ProxyGFWlist=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list" >> $GITHUB_ENV
          echo "ChinaDomain=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list" >> $GITHUB_ENV
          echo "ChinaCompanyIp=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list" >> $GITHUB_ENV
          echo "Spotify=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Spotify.list" >> $GITHUB_ENV
          echo "TikTok=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/TikTok.list" >> $GITHUB_ENV
          echo "Speedtest=https://raw.githubusercontent.com/dler-io/Rules/master/Surge/Surge%203/Provider/Speedtest.list" >> $GITHUB_ENV
        shell: bash

      - name: Checkout codebase
        uses: actions/checkout@master

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Generate LocalAreaNetwork
        run: |
          mkdir -p ./tmp/ ./domains/
          curl -sSL ${LocalAreaNetwork} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/LocalAreaNetwork.list

      - name: Generate private_direct
        run: |
          curl -sSL ${private_direct} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/private_direct.list

      - name: Generate private_proxy
        run: |
          curl -sSL ${private_proxy} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/private_proxy.list

      - name: Generate Emby
        run: |
          curl -sSL ${Emby} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/Emby.list

      - name: Generate GoogleCN
        run: |
          curl -sSL ${GoogleCN} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/GoogleCN.list

      - name: Generate GoogleFCM
        run: |
          curl -sSL ${GoogleFCM} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/GoogleFCM.list

      - name: Generate Bing
        run: |
          curl -sSL ${Bing} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/Bing.list

      - name: Generate OneDrive
        run: |
          curl -sSL ${OneDrive} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/OneDrive.list

      - name: Generate Microsoft
        run: |
          curl -sSL ${Microsoft} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/Microsoft.list

      - name: Generate Apple
        run: |
          curl -sSL ${Apple} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/Apple.list

      - name: Generate Telegram
        run: |
          curl -sSL ${Telegram} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/Telegram.list

      - name: Generate OpenAi
        run: |
          curl -sSL ${OpenAi} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/OpenAi.list

      - name: Generate YouTube
        run: |
          curl -sSL ${YouTube} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/YouTube.list

      - name: Generate ProxyMedia
        run: |
          curl -sSL ${ProxyMedia} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/ProxyMedia.list

      - name: Generate ProxyGFWlist
        run: |
          curl -sSL ${ProxyGFWlist} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/ProxyGFWlist.list

      - name: Generate ChinaDomain
        run: |
          curl -sSL ${ChinaDomain} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/ChinaDomain.list

      - name: Generate ChinaCompanyIp
        run: |
          curl -sSL ${ChinaCompanyIp} | grep -E '^(IP-CIDR|IP-CIDR6)' > ./domains/ChinaCompanyIp.list

      - name: Generate Spotify
        run: |
          curl -sSL ${Spotify} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/Spotify.list

      - name: Generate TikTok
        run: |
          curl -sSL ${TikTok} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/TikTok.list

      - name: Generate Speedtest
        run: |
          curl -sSL ${Speedtest} | grep -E '^(DOMAIN|DOMAIN-SUFFIX|DOMAIN-KEYWORD)' > ./domains/Speedtest.list

      - name: Generate Apple
        run: |
          curl -sSL ${Apple} | grep -E '^(IP-CIDR|IP-CIDR6)' > ./domains/Apple-IP.list

      - name: Generate ChinaDomain
        run: |
          curl -sSL ${ChinaDomain} | grep -E '^(IP-CIDR|IP-CIDR6)' > ./domains/ChinaDomain-IP.list

      - name: Generate GoogleFCM
        run: |
          curl -sSL ${GoogleFCM} | grep -E '^(IP-CIDR|IP-CIDR6)' > ./domains/GoogleFCM_IP.list

      - name: Generate LocalAreaNetwork
        run: |
          curl -sSL ${LocalAreaNetwork} | grep -E '^(IP-CIDR|IP-CIDR6)' > ./domains/LocalAreaNetwork-IP.list

      - name: Generate ProxyGFWlist
        run: |
          curl -sSL ${ProxyGFWlist} | grep -E '^(IP-CIDR|IP-CIDR6)' > ./domains/ProxyGFWlist-IP.list

      - name: Generate ProxyMedia
        run: |
          curl -sSL ${ProxyMedia} | grep -E '^(IP-CIDR|IP-CIDR6)' > ./domains/ProxyMedia-IP.list

      - name: Generate Telegram
        run: |
          curl -sSL ${Telegram} | grep -E '^(IP-CIDR|IP-CIDR6)' > ./domains/Telegram-IP.list


      - name: Git push assets to `domains` branch
        run: |
          cd ./domains/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b domains
          git add . && git commit -m "域名列表更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin domains

      - name: Purge jsDelivr CDN
        run: |
          cd ./domains/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@domains/${file}"
          done
  
      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 3
          keep_minimum_runs: 1
