name: Build domains
on:
  workflow_dispatch:
  schedule:
    - cron: "0 18 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "update_version=$(date -d '+8 hours' +%Y-%m-%d)" >> ${GITHUB_ENV}
          echo "ads=https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-clash.yaml" >> $GITHUB_ENV
          echo "private1=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.list" >> $GITHUB_ENV
          echo "private2=https://raw.githubusercontent.com/juewuy/ShellCrash/dev/public/fake_ip_filter.list" >> $GITHUB_ENV
          echo "private3=https://raw.githubusercontent.com/XIU2/TrackersListCollection/master/all.txt" >> $GITHUB_ENV
          echo "games_cn1=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SteamCN/SteamCN.list" >> $GITHUB_ENV
          echo "games_cn2=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN.list" >> $GITHUB_ENV
          echo "netflix=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list" >> $GITHUB_ENV
          echo "disney=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.list" >> $GITHUB_ENV
          echo "max=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBO/HBO.list" >> $GITHUB_ENV
          echo "primevideo=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PrimeVideo/PrimeVideo.list" >> $GITHUB_ENV
          echo "appletv=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AppleTV/AppleTV.list" >> $GITHUB_ENV
          echo "youtube=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.list" >> $GITHUB_ENV
          echo "tiktok=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.list" >> $GITHUB_ENV
          echo "bilibili=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BiliBili/BiliBili.list" >> $GITHUB_ENV
          echo "ai1=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.list" >> $GITHUB_ENV
          echo "ai2=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Copilot/Copilot.list" >> $GITHUB_ENV
          echo "ai3=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Gemini/Gemini.list" >> $GITHUB_ENV
          echo "ai4=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Claude/Claude.list" >> $GITHUB_ENV
          echo "networktest=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.list" >> $GITHUB_ENV
          echo "applications=https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt" >> $GITHUB_ENV
          echo "proxy=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Global/Global.list" >> $GITHUB_ENV
          echo "cn=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax.list" >> $GITHUB_ENV
        shell: bash

      - name: Checkout codebase
        uses: actions/checkout@master

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Checkout cokebar/gfwlist2dnsmasq
        uses: actions/checkout@v4
        with:
          repository: cokebar/gfwlist2dnsmasq
          path: gfwlist2dnsmasq

      - name: Append attribute domains
        run: |
          echo "include:geolocation-!cn @cn" >> ./community/data/cn
          echo "include:geolocation-cn @!cn" >> ./community/data/geolocation-\!cn

      - name: Generate `clash` geosite.dat
        run: |
          go run ./ --datapath=./community/data/

      - name: Generate ads
        run: |
          mkdir -p ./tmp/ ./domains/
          curl -sSL ${ads} | grep -Ev '#|payload:' | sed '/^\s*$/d' | sed "s/'$//" | sed 's/^[ \t]*//' | sed "s/^- '+\./DOMAIN-SUFFIX,/" | sed "s/^- '/DOMAIN,/" > ./domains/ads.list

      - name: Generate private
        run: |
          cat <<EOF > ./tmp/temp-private.txt
          DOMAIN,clash.razord.top
          DOMAIN,clash.metacubex.one
          DOMAIN,yacd.haishan.me
          DOMAIN,yacd.metacubex.one
          DOMAIN,d.metacubex.one
          DOMAIN,metacubex.github.io
          DOMAIN,metacubexd.pages.dev
          EOF
          grep -v 'regexp:' ./publish/private.txt | sed '/^\s*$/d' | sed 's/^full:/DOMAIN,/' | sed 's/^domain:/DOMAIN-SUFFIX,/' | sed 's/^keyword:/DOMAIN-KEYWORD,/' >> ./tmp/temp-private.txt
          curl -sSL ${private1} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' >> ./tmp/temp-private.txt
          curl -sSL ${private2} | sed -n '/#AdGuard/,/#/p' | grep -E '^\*.|^\+.' | sed 's/^[*+]\./DOMAIN-SUFFIX,/' >> ./tmp/temp-private.txt
          curl -sSL ${private2} | sed -n '/#AdGuard/,/#/p' | grep -Ev '#|^\*.|^\+.' | sed '/^\s*$/d' | sed 's/^/DOMAIN,/' >> ./tmp/temp-private.txt
          curl -sSL ${private3} | grep -i '\.[A-Z]' | awk -F'[/:]' '{print $4}' | sed 's/^/DOMAIN,/' >> ./tmp/temp-private.txt
          sort --ignore-case -u ./tmp/temp-private.txt > ./domains/private.list

      - name: Generate microsoft-cn
        run: |
          grep -v 'regexp:' ./publish/microsoft.txt | grep '@cn' | sed 's/^full:/DOMAIN,/' | sed 's/^domain:/DOMAIN-SUFFIX,/' | sed 's/^keyword:/DOMAIN-KEYWORD,/' | sed 's/:@cn$//' > ./domains/microsoft-cn.list

      - name: Generate apple-cn
        run: |
          grep -v 'regexp:' ./publish/apple.txt | grep '@cn' | sed 's/^full:/DOMAIN,/' | sed 's/^domain:/DOMAIN-SUFFIX,/' | sed 's/^keyword:/DOMAIN-KEYWORD,/' | sed 's/:@cn$//' > ./domains/apple-cn.list 

      - name: Generate google-cn
        run: |
          grep -v 'regexp:' ./publish/google.txt | grep '@cn' | sed 's/^full:/DOMAIN,/' | sed 's/^domain:/DOMAIN-SUFFIX,/' | sed 's/^keyword:/DOMAIN-KEYWORD,/' | sed 's/:@cn$//' > ./domains/google-cn.list

      - name: Generate games-cn
        run: |
          grep -v 'regexp:' ./publish/category-games.txt | grep '@cn' | sed 's/^full:/DOMAIN,/' | sed 's/^domain:/DOMAIN-SUFFIX,/' | sed 's/^keyword:/DOMAIN-KEYWORD,/' | sed 's/:@cn$//' > ./tmp/temp-games-cn.txt
          curl -sSL ${games_cn1} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' >> ./tmp/temp-games-cn.txt
          curl -sSL ${games_cn2} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' >> ./tmp/temp-games-cn.txt
          sort --ignore-case -u ./tmp/temp-games-cn.txt > ./domains/games-cn.list

      - name: Generate netflix
        run: |
          curl -sSL ${netflix} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' > ./domains/netflix.list

      - name: Generate disney
        run: |
          curl -sSL ${disney} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' > ./domains/disney.list

      - name: Generate max
        run: |
          curl -sSL ${max} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' > ./domains/max.list

      - name: Generate primevideo
        run: |
          curl -sSL ${primevideo} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' > ./domains/primevideo.list

      - name: Generate appletv
        run: |
          curl -sSL ${appletv} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' > ./domains/appletv.list

      - name: Generate youtube
        run: |
          curl -sSL ${youtube} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' > ./domains/youtube.list

      - name: Generate tiktok
        run: |
          curl -sSL ${tiktok} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' > ./domains/tiktok.list

      - name: Generate bilibili
        run: |
          curl -sSL ${bilibili} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' > ./domains/bilibili.list

      - name: Generate ai
        run: |
          curl -sSL ${ai1} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' > ./tmp/temp-ai.txt
          curl -sSL ${ai2} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' >> ./tmp/temp-ai.txt
          curl -sSL ${ai3} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' >> ./tmp/temp-ai.txt
          curl -sSL ${ai4} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' >> ./tmp/temp-ai.txt
          sort --ignore-case -u ./tmp/temp-ai.txt > ./domains/ai.list

      - name: Generate networktest
        run: |
          cat <<EOF > ./tmp/temp-networktest.txt
          DOMAIN-KEYWORD,ipv6-test
          DOMAIN-KEYWORD,ipv6test
          DOMAIN-KEYWORD,test-ipv6
          DOMAIN-KEYWORD,testipv6
          EOF
          grep -v 'regexp:' ./publish/speedtest.txt | sed '/^\s*$/d' | sed 's/^full:/DOMAIN,/' | sed 's/^domain:/DOMAIN-SUFFIX,/' | sed 's/^keyword:/DOMAIN-KEYWORD,/' >> ./tmp/temp-networktest.txt
          curl -sSL ${networktest} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' >> ./tmp/temp-networktest.txt
          sort --ignore-case -u ./tmp/temp-networktest.txt > ./domains/networktest.list

      - name: Generate applications
        run: |
          curl -sSL ${applications} | grep -v 'payload:' | sed '/^\s*$/d' | sed 's/^[ \t]*//' | sed 's/^- //' > ./domains/applications.list

      - name: Generate proxy
        run: |
          chmod +x ./gfwlist2dnsmasq/gfwlist2dnsmasq.sh
          ./gfwlist2dnsmasq/gfwlist2dnsmasq.sh -l -o ./tmp/temp-proxy.txt
          sed -i 's/^/DOMAIN-SUFFIX,/' ./tmp/temp-proxy.txt
          grep -v 'regexp:' ./publish/geolocation-\!cn.txt | sed '/^\s*$/d' | sed 's/^full:/DOMAIN,/' | sed 's/^domain:/DOMAIN-SUFFIX,/' | sed 's/^keyword:/DOMAIN-KEYWORD,/' | sed 's/:@\!cn$//' >> ./tmp/temp-proxy.txt
          curl -sSL ${proxy} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' >> ./tmp/temp-proxy.txt
          sort --ignore-case -u ./tmp/temp-proxy.txt > ./domains/proxy.list

      - name: Generate cn
        run: |
          grep -v 'regexp:' ./publish/cn.txt | sed '/^\s*$/d' | sed 's/^full:/DOMAIN,/' | sed 's/^domain:/DOMAIN-SUFFIX,/' | sed 's/^keyword:/DOMAIN-KEYWORD,/' | sed 's/:@cn$//' > ./tmp/temp-cn.txt
          curl -sSL ${cn} | grep -Ev '#|IP-CIDR' | sed '/^\s*$/d' >> ./tmp/temp-cn.txt
          sort --ignore-case -u ./tmp/temp-cn.txt > ./domains/cn.list
          rm -rf ./tmp* ./publish*

      - name: Git push assets to `domains` branch
        run: |
          cd ./domains/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b domains
          git add . && git commit -m "域名列表更新于 ${update_version}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin domains

      - name: Purge jsDelivr CDN
        run: |
          cd ./domains/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@domains/${file}"
          done
  
      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 3
          keep_minimum_runs: 1
